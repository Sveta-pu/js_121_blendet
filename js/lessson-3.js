// –§—É–Ω–∫—Ü—ñ—è makePizza –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º –∫–ª—ñ—î–Ω—Ç—É.

// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π result –±—É–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó makePizza,
// –∞ —É –∑–º—ñ–Ω–Ω—ñ–π pointer –±—É–ª–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—é makePizza.

// function makePizza() {
//   return 'Your pizza is being prepared, please wait.';
// }

// const result = makePizza();
// const pointer = makePizza;

// console.log(result);
// console.log(pointer);
// console.log(pointer());

// –ö–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—ó

// function greet(name) {
//   console.log(`Welcome ${name}!`);
// }

// function notify(name) {
//   console.log(`Dear ${name}, your room will be ready in 30 minutes`);
// }

// console.log(greet('Saha'));
// console.log(notify('Sveta'));

// **************************
// –§—É–Ω–∫—Ü—ñ—è makeMessage –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä —ñ–º'—è
// –ø—ñ—Ü–∏, —â–æ –¥–æ—Å—Ç–∞–≤–ª—è—î—Ç—å—Å—è, pizzaName —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º –∫–ª—ñ—î–Ω—Ç—É.

// –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é makeMessage —Ç–∞–∫–∏–º —á–∏–Ω–æ–º,
// —â–æ–± –≤–æ–Ω–∞ –æ—á—ñ–∫—É–≤–∞–ª–∞ –¥—Ä—É–≥–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (–ø–∞—Ä–∞–º–µ—Ç—Ä callback)
// –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—é —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ó—ó –≤–∏–∫–ª–∏–∫—É.
//  –§—É–Ω–∫—Ü—ñ—ó deliverPizza –∞–±–æ makePizza –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏—Å—è
//   —è–∫ –∫–æ–ª–±–µ–∫ –¥–ª—è makeMessage —ñ –æ—á—ñ–∫—É–≤–∞—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º
//    —ñ–º'—è –≥–æ—Ç–æ–≤–æ—ó –ø—ñ—Ü–∏, —â–æ –¥–æ—Å—Ç–∞–≤–ª—è—î—Ç—å—Å—è.

// function deliverPizza(pizzaName) {
//   return `Delivering pizza ${pizzaName}.`;
// }

// function makePizza(pizzaName) {
//   return `Pizza ${pizzaName} is being prepared, please wait...`;
// }

// function makeMessage(pizzaName, callback) {
//   // –≤–∏–∫–ª–∏–∫–∞—î–º–æ –∫–æ–ª–±–µ–∫ —ñ –ø–µ—Ä–µ–¥–∞—î–º–æ –π–æ–º—É pizzaName
//   return callback(pizzaName);
// }

// // –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–ª–∏–∫—ñ–≤
// console.log(makeMessage('Royal Grand', makePizza));
// // "Pizza Royal Grand is being prepared, please wait..."

// console.log(makeMessage('Ultracheese', deliverPizza));
// // "Delivering pizza Ultracheese."

// ************************
// –Ü–Ω–ª–∞–π–Ω-–∫–æ–ª–±–µ–∫–∏

// –§—É–Ω–∫—Ü—ñ—è makePizza –º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:
//  pizzaName - —ñ–º'—è –ø—ñ—Ü–∏ —Ç–∞ callback - –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—é.
//  –ü—ñ–¥ —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è, makePizza –≤–∏–∫–ª–∏–∫–∞—î —Ü–µ–π –∫–æ–ª–±–µ–∫,
//  –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É pizzaName —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç.

// –î–æ–ø–æ–≤–Ω–∏ –¥—Ä—É–≥–∏–π –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó makePizza(pizzaName, callback),
//  –ø–µ—Ä–µ–¥–∞–≤—à–∏ –¥—Ä—É–≥–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —ñ–Ω–ª–∞–π–Ω –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—é eatPizza(pizzaName).
//   –ö–æ–ª–±–µ–∫ eatPizza –ª–æ–≥—É—î —Ä—è–¥–æ–∫ "Eating pizza <–Ω–∞–∑–≤–∞ –ø—ñ—Ü–∏>",
//    –¥–µ <–Ω–∞–∑–≤–∞ –ø—ñ—Ü–∏> —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ pizzaName.

// function makePizza(pizzaName, callback) {
//   console.log(`Pizza ${pizzaName} is being prepared, please wait...`);
//   callback(pizzaName);
// }

// makePizza('Royal Grand', function deliverPizza(pizzaName) {
//   console.log(`Delivering pizza ${pizzaName}`);
// });

// makePizza('Ultracheese');

// –£—Ä–æ–∫ –æ–Ω–ª–∞–π–Ω —Ä–æ–∑–≥–ª—è–¥–∞—î–º–æ –∫–æ–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—é 02,09,2025

// function foo(name) {
//   console.log(`Hello ${name}`);
// }
// foo('Sveta'); /// Hello Sveta

// //  —è–∫—à–æ –Ω–µ –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –∫—Ä—É–≥–ª—ñ –¥—É–∂–∫–∏ —Ç–æ –±—É–¥–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ü—é —ñ—É–Ω–∫—Ü—ñ—é

// const a = foo;
// console.log(a('Petya')); ////Hello Petya
// ```
// // // –º–æ–∂–Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ–¥–∞—Ç–∏ —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –≤ —ñ–Ω—à—É —Ñ—É–Ω–∫—Ü—ñ—é

// function Too(str, collback) {
//   // console.log(str); //// Yura
//   console.log(collback); ///  ∆í foo(name)  –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ—É–Ω–∫ foo
//   console.log(`Yello ${name}`);
// }

// function foo(name) {
//   console.log(`Yello ${name}`);
// }

// Too('Yura', foo);//// –≤–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫–Ω—Ü—ñ—é –≤

// –º–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∫–∞–ª—å–∫ –≤–æ–Ω–∞ –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
// –∞ —Ç–∞ –± , –í  –º–µ–Ω–µ –±—É–¥–µ –∑–º—ñ–Ω–Ω–∞ –≤ —è–∫—ñ–π —è –±—É–¥—É –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –∞+—Å—Ç–≤–æ—Ä—é—î–º–æ –∑—Å—ñ–≥–Ω—É
// —è–∫–∞ –ø—Ä–∏–≤–æ–¥–∏—Ç–∏–º–µ –¥–æ —Ä—è–¥–∫–∞

// function calc(a, b, collback) {
//   const c = collback(a, b);
//   const str = String(c);
//   const res = str + '!!!';
//   return res;
// }

// console.log(
//   calc(2, 3, function (a, b) {
//     return a + b;
//   })
// );

// console.log(
//   calc(10, 20, function (c, z) {
//     return c * z;
//   })
// );

// console.log(calc(1, 1));

// function calc2(a, b) {
//   const c = a - b;
//   const str = String(c);
//   const res = str + '!!!';
//   return res;
// // }

// console.log(calc2(20, 2));

// –¢—É—Ç –∑–∞–≤–¥–∞–Ω–Ω—è: –Ω–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é each(array, callback), —è–∫–∞:

// –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º,

// –ø—Ä–∏–π–º–∞—î —Ñ—É–Ω–∫—Ü—ñ—é-–∫–æ–ª–±–µ–∫ –¥—Ä—É–≥–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º,

// –∑–∞—Å—Ç–æ—Å–æ–≤—É—î –∫–æ–ª–±–µ–∫ –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É,

// –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤–∏–∫–ª–∏–∫—ñ–≤ –∫–æ–ª–±–µ–∫–∞.

// –¢–æ–±—Ç–æ —Ç–∏ –º–∞—î—à –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –≤–ª–∞—Å–Ω—É —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é –º–µ—Ç–æ–¥—É map.

// function each(array, callback) {
//   const newArray = [];
//   for (const item of array) {
//     // console.log(callback(item)); —à–æ—Å—å —Ä–æ–±–∏—Ç—å —â–æ –º–∏ –≤–∫–∞–∑–∞–ª–∏ –≤ —Ä–µ—Ç–æ—Ä–Ω —Ç–∞ –≤–º–∫–ª–∏–∫–ª —Ñ—É–Ω
//     newArray.push(callback(item));
//   }
//   return newArray; //// –º–∏ –æ—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
// }

// console.log(
//   each([20, 30, 17, 56], function (value) {
//     return value * 2;
//   })
// );

// console.log(
//   each([20, 30, 17, 56], function (value) {
//     return value - 2;
//   })
// );

// –°–¢–†–§–õ–û–ß–ù–Ü  –§–£–ù–ö–¶–Ü–á

// function foo(a, b) {
//   return a + b;
// }
// console.log(foo(2, 22));
// —Ü–µ –∑–≤–∏—á–∞–π–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –º–∏ –¥–æ –Ω–µ—ó –º–æ–∂–Ω–∞ –¥–æ—Å—Ç—É–∫–∞—Ç–∏—Å—è –ø–µ—Ä–¥  —ó—ó –Ω–∞–ø–∏—Å–∞–Ω–Ω—è–º

// const addAffow = (a, b) => { ///// —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —è–∫ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏
//   return a * b;
// };

// console.log(addAffow(7, 27));
//  –î–æ —Å—Ç—Ä—ñ–ª–æ—á–Ω–æ—ó —ñ—Ü–Ω–∫—Ü—ñ—ó –Ω–µ –º–æ–∂–ª–∏–≤–æ –¥–æ—Å—Ç—É–∫–∞—Ç–∏—Å—è –ø–µ—Ä–µ–¥ –Ω–∞–ø–∏—Å–∞–Ω–Ω—è–º –Ω–∞ –≤—ñ–¥–º—ñ–Ω–Ω—É –≤—ñ–¥
//  –∑–≤–∏—á–∞–π–Ω–æ—ó –º–∏ –æ—Ç—Ä–∏–º–∞—î–º–æ –ê–Ω–¥–µ—Ñ–∞–π–Ω–µ–¥ –Ω–µ –º–∞—î –∞–≥—Ä—É–º–µ–Ω—Ç—Å –Ω–∞ –≤—ñ–¥–º—ñ–Ω–Ω—É –≤—ñ–¥ –∑–≤–∏—á–∞–π–Ω–æ—ó
//  –∫—Ä–∞—â–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Ä–µ—Å—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º ( —Ç—Ä–∏ –∫—Ä–∞–ø–∫–∏)

// const foo = () => ({ a: 20 });
// console.log(foo());

// const calc = (a, b, callback) => {
//   const res = callback(a, b);
//   const str = res + '!!!';
//   return str;
// };

// console.log(
//   calc(70, 70, (to, la) => {
//     return to + la;
//   })
// );

// console.log(
//   calc(7, 70, (t, l) => {
//     return t + l;
//   })
// );
//                  / 0  1   2   3 /
// const numbers = [10, 20, 30, 40];

// numbers.forEach(function (number, index, arr) {
//   console.log(number, index, arr);  10 0 (4)¬†[10, 20, 30, 40]
// });

// const numbers = [1, 2, 3];
// let tooal = 0;
// numbers.forEach(nun => {
//   tooal += nun;
// });
// console.log(tooal);   —Ü–µ —â–æ–± –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å—É–º—É —á–∏—Å–µ–ª

// *************************
// const numbers = [1, 2, 3];
// let tooal = 0;
// numbers.forEach(function (nan) {
//   tooal += nan;
// });
// console.log(tooal);

// –ö–ª–∞—Å–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è üëå –¢–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–º—ñ–Ω–∏—Ç–∏ –∑–≤–∏—á–∞–π–Ω–∏–π for –Ω–∞ forEach —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —Å—Ç—Ä—ñ–ª–∫–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ—é.

// –û—Å—å —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥:

// const logItems = (items) => {
//   items.forEach((item, index) => {
//     console.log(`${index + 1} - ${item}`);
//   });
// };

// // –¢–µ—Å—Ç–∏
// logItems(["Mango", "Poly", "Ajax"]);
// logItems(["üçé", "üçê", "üçá", "üçë", "üçå", "üçã"]);

// üîé –©–æ –∑–º—ñ–Ω–∏–ª–æ—Å—å:

// function logItems(items) {} ‚Üí –∑–∞–º—ñ–Ω–∏–ª–∏ –Ω–∞ —Å—Ç—Ä—ñ–ª–∫–æ–≤—É:

// const logItems = (items) => { ... }

// –¶–∏–∫–ª for (let i = 0; i < items.length; i++) ‚Üí –∑–∞–º—ñ–Ω–∏–ª–∏ –Ω–∞ forEach.

// –ö–æ–ª–±–µ–∫ –≤ forEach —Ç–µ–∂ –∑—Ä–æ–±–ª–µ–Ω–∏–π —Å—Ç—Ä—ñ–ª–∫–æ–≤–æ—é —Ñ—É–Ω–∫—Ü—ñ—î—é:

// items.forEach((item, index) => { ... })

// const logItems = array => {
//   array.forEach((item, index) => {
//     console.log(`${index + 1} - ${item}`);
//   });
// };

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçê', 'üçá', 'üçë', 'üçå', 'üçã']);

// –î–æ–±—Ä–µ üëå ‚Äî —Ü–µ –∑–∞–≤–¥–∞–Ω–Ω—è: –∑—Ä–æ–±–∏—Ç–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑ for
//  –Ω–∞ forEach + —Å—Ç—Ä—ñ–ª–∫–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ—é.

// –û—Ä–∏–≥—ñ–Ω–∞–ª —É —Ç–µ–±–µ —Ç–∞–∫–∏–π:

// function printContactsInfo({ names, phones }) {
//   const namesArr = names.split(",");
//   const phonesArr = phones.split(",");

//   for (let i = 0; i < namesArr.length; i += 1) {
//     console.log(`${namesArr[i]}: ${phonesArr[i]}`);
//   }
// }

// üîπ –í–∞—Ä—ñ–∞–Ω—Ç –∑ forEach —ñ —Å—Ç—Ä—ñ–ª–∫–æ—é:

// const printContactsInfo = obj => {
//   const namesArray = obj.names.split(',');
//   const phonesArray = obj.phones.split(',');
//   namesArray.forEach((name, index) => {
//     console.log(`${name} = ${phonesArray[index]}`);

//   });
//   console.log(namesArray);
//   console.log(phonesArray);
// };

// printContactsInfo({
//   names: 'Jacob,William,Solomon,Artemis',
//   phones: '89001234567,89001112233,890055566377,890055566300',
// });

// –ß—É–¥–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è üôå ‚Äî —Ç—Ä–µ–±–∞ –∑—Ä–æ–±–∏—Ç–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥
//  calculateAverage –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é forEach —ñ —Å—Ç—Ä—ñ–ª–∫–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó.

// –û—Ä–∏–≥—ñ–Ω–∞–ª:
// function calculateAverage(...args) {
//   let total = 0;
//   for (let i = 0; i < args.length; i++) {
//     total += args[i];
//   }
//   return total / args.length;
// }

// üîπ –í–∞—Ä—ñ–∞–Ω—Ç –∑ forEach + —Å—Ç—Ä—ñ–ª–∫–∞:

// const calculateAverage = (...args) => {
//   let tooal = 0;
//   args.forEach(item => (tooal += item));
//   return tooal / args.length;
// };

// console.log(calculateAverage(1, 2, 3, 4)); // 2.5
// console.log(calculateAverage(14, 8, 2)); // 8
// console.log(calculateAverage(27, 43, 2, 8, 36)); // 23.2

// üîπ –ü–æ—è—Å–Ω–µ–Ω–Ω—è

// ____________________________________________ 4

// Array.prototype.map()
//  --- –ü–û–ï–¢–ê–ü–ù–û –ü–ï–†–ï–ë–ò–†–ê–Ñ –û–†–ò–ì–Ü–ù–ê–õ–¨–ù–ò–ô –ú–ê–°–ò–í
//  --- –ù–ï –ó–ú–Ü–ù–Æ–Ñ –û–†–ò–ì–Ü–ù–ê–õ–¨–ù–ò–ô –ú–ê–°–ò–í
//  ------ –ü–û–í–ï–†–¢–ê–Ñ –ù–û–í–ò–ô –ú–ê–°–ò–í –¢–ê–ö–û–á –ñ –î–û–í–ñ–ò–ù–ò

// map –ø–µ—Ä–µ–±–∏—Ä–∞—î –º–∞—Å–∏–≤ allCars –ø–æ –µ–ª–µ–º–µ–Ω—Ç–∞–º.

// –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –æ–±‚Äô—î–∫—Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ç—ñ–ª—å–∫–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—è model.

// –£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ —Ñ–æ—Ä–º—É—î—Ç—å—Å—è –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç—ñ–ª—å–∫–∏ –∑ –Ω–∞–∑–≤–∞–º–∏ –º–æ–¥–µ–ª–µ–π.

// const allCars = [
//   { make: 'Honda', model: 'CR-V', amount: 14, price: 24045 },
//   { make: 'Honda', model: 'Accord', amount: 2, price: 22455 },
//   { make: 'Mazda', model: 'Mazda 6', amount: 8, price: 24195 },
//   { make: 'Mazda', model: 'CX-9', amount: 7, price: 31520 },
//   { make: 'Toyota', model: '4Runner', amount: 19, price: 34210 },
//   { make: 'Toyota', model: 'Sequoia', amount: 16, price: 45560 },
//   { make: 'Toyota', model: 'Tacoma', amount: 4, price: 24320 },
//   { make: 'Ford', model: 'F-150', amount: 11, price: 27110 },
//   { make: 'Ford', model: 'Fusion', amount: 13, price: 22120 },
//   { make: 'Ford', model: 'Explorer', amount: 6, price: 31660 },
// ];

// getModels ‚Üí –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–æ–¥–µ–ª–µ–π —Å—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫–Ω—Ü—ñ—é

// const getModels = cars => {
//   const res = [];
//   cars.forEach(item => {
//     //item///- –æ–±—î–∫—Ç –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
//     console.log(item.model);
//     res.push(item.model);
//   });
//   return res;
// // };

// **************************************

// const getModels = cars => {
//   const res = cars.map(car => {
//     // console.log(car);
//     return car.model;
//   });
//   return res;
// };
// console.log(getModels(allCars));

// –î–æ–±—Ä–µ üëå ‚Äî —Ç–æ–±—ñ —Ç—Ä–µ–±–∞ –∑—Ä–æ–±–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é makeCarsWithDiscount,
// —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –æ–±‚Äô—î–∫—Ç—ñ–≤,
// –∞–ª–µ –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º price –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∑–Ω–∏–∂–∫–∏.

// const makeCarsWithDiscount = (cars, discount) => {
//   return cars.map(car => {
//     return {
//       ...car,
//       price: car.price * (1 - discount),
//     };
//   });
// };

// console.log(makeCarsWithDiscount(allCars, 0.2));
// console.log(makeCarsWithDiscount(allCars, 0.5));

// *****************************

// –î–æ–±—Ä–µ üëå ‚Äî –∑–∞–≤–¥–∞–Ω–Ω—è —Ç–∞–∫–µ:
// –∑–±—ñ–ª—å—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω (timePlayed) –≥—Ä–∞–≤—Ü—è –∑–∞ –π–æ–≥–æ id.

// –£ —Ç–µ–±–µ —î –º–∞—Å–∏–≤ players:

// const players = [
//   { id: 'player-1', name: 'Mango', timePlayed: 310, points: 54 },
//   { id: 'player-2', name: 'Poly', timePlayed: 470, points: 92 },
//   { id: 'player-3', name: 'Kiwi', timePlayed: 230, points: 48 },
//   { id: 'player-4', name: 'Ajax', timePlayed: 150, points: 71 },
//   { id: 'player-5', name: 'Chelsy', timePlayed: 80, points: 43 },
// ];

// const playerId = 'player-3';

// const newPlayers = players.map(item => {
//   if (item.id === playerId) {
//     return {
//       ...item,
//       timePlayed: item.timePlayed + 100,
//     };
//   }
//   return item;
// });

// console.table(newPlayers);

// üìå –£ —Ü—å–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ:

// map –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ (–æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è).

// –Ø–∫—â–æ id –∑–±—ñ–≥–∞—î—Ç—å—Å—è ‚Üí —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –æ–±‚Äô—î–∫—Ç —ñ–∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º timePlayed.

// –Ø–∫—â–æ –Ω—ñ ‚Üí –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –≥—Ä–∞–≤—Ü—è –±–µ–∑ –∑–º—ñ–Ω.

// —É–¥–æ–≤–∏–π –ø—Ä–∏–∫–ª–∞–¥ üöÄ ‚Äî —É —Ç–µ–±–µ —î –º–∞—Å–∏–≤ —Ç–≤—ñ—Ç—ñ–≤ –∑ —Ç–µ–≥–∞–º–∏,
//  —ñ —Å–∞–º–µ —Ç—É—Ç –∑—Ä—É—á–Ω–æ –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ flatMap

// const tweets = [
//   { id: '000', likes: 5, tags: ['js', 'nodejs'] },
//   { id: '001', likes: 2, tags: ['html', 'css'] },
//   { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },
//   { id: '003', likes: 8, tags: ['css', 'react'] },
//   { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },
// ];

// const tags = tweets.flatMap(tweet => {
//   return tweet.tags;
// });

// console.log(tags);

// –≤ –º–µ—Ç–æ–¥ flatMap() –æ—Ç—Ä–∏–º—É—î –≤ —Å–µ–±–µ —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
// 1) –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É
// 2) —ñ–Ω–¥–µ–∫—Å —Ü—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
// 3) –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤–∏—Ö—ñ–¥–Ω–∏–π –º–∞—Å–∏–≤
// —è–∫—à–æ —è–∫–∏–π—Å—å –∑ —Ü–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –Ω–µ–ø–æ—Ç—Ä—ñ–±–µ–Ω –º–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–±–µ—Ä–∞—î–º–æ
// –ú–µ—Ç–æ–¥ flatMap() –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑–∞–ø–æ–≤–Ω–µ–Ω–∏–π –∑–Ω–∞—á–µ–Ω—è–º–∏
// —à–æ –º–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏ –∫–æ–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—î—é –í—ñ–Ω —ó—Ö —Ä–æ–∑–≥–æ—Ä—Ç–∞—î
// –ü—Ä–∞—Ü—é—î –∑ –ø–µ—Ä—à–∏–º –≤–∏–¥–æ–º –≤–∫–ª–∞–¥–µ–Ω–æ—Å—Ç—ñ —Ç–æ–±—Ç–æ —è–∫—à–æ –≤ –º–∞—Å–∏–≤—ñ –±—É–¥–µ —â–µ –º–∞—Å–∏–≤ –≤—ñ–Ω –Ω–µ –±—É–¥–µ
// –∑ –Ω–∏–º –ø—Ä–∞—Ü—é–≤–∞—Ç–∏,

// üìå –¢–æ–±—Ç–æ:

// map —Å—Ç–≤–æ—Ä—é—î –º–∞—Å–∏–≤ –º–∞—Å–∏–≤—ñ–≤,

// flatMap –æ–¥—Ä–∞–∑—É —Ä–æ–∑–≥–æ—Ä—Ç–∞—î –π–æ–≥–æ –Ω–∞ –æ–¥–∏–Ω —Ä—ñ–≤–µ–Ω—å.

// const students = [
//   { name: 'Mango', score: 83 },
//   { name: 'Poly', score: 59 },
//   { name: 'Ajax', score: 37 },
//   { name: 'Kiwi', score: 94 },
//   { name: 'Houston', score: 64 },
// ];

// const names = students.map(student => student.name);
// console.log(names); // ["Mango", "Poly", "Ajax", "Kiwi", "Houston"]
